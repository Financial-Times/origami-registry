// Container widths that products can modify

/// Left primary zone width
/// @type {Number}
$o-registry-header-primary-left-width: (default: 244px, M: 303px) !default;

/// Left secondary zone width
/// @type {Number}
$o-registry-header-secondary-left-width: 150px !default;

/// Primary featured zone width
/// @type {Number}
$o-registry-header-primary-featured-width: 160px !default;

/// Breakpoint at which the header layout changes significantly
$o-registry-header-breakpoint: M !default;

.o-registry-header {
	min-height: 55px;
	max-height: 125px;
	background: oColorsGetPaletteColor('grey-tint5');
	// Workaround so the brand colour goes to full width in XL screens
	background-image: linear-gradient(to bottom, transparent 50px, oColorsGetPaletteColor('blue') 20px);
	// Prevents flashes of text in Safari when items are hovered and opacity varies
	-webkit-font-smoothing: antialiased;

	a {
		text-decoration: none;
	}
	[aria-hidden=true] {
		display: none;
	}
}

// Container for primary and secondary that sets the width of these using o-grid
.o-registry-header__container {
	@include oGridContainer;
	position: relative;
	max-width: $o-registry-max-width;
	color: oColorsGetPaletteColor('white');

	a {
		color: oColorsGetPaletteColor('white');

		&:focus,
		&:hover {
			color: oColorsGetPaletteColor('white');
			opacity: 0.7;
		}
	}

	// We need mega-dropdowns to also have the same gutters as the container
	.o-hierarchical-nav__mega-dropdown {
		right: oGridGutter();
		left: oGridGutter();
		width: auto;

		@include _oRegistryHeaderBreakpoint {
			right: oGridGutter($o-registry-header-breakpoint);
			left: oGridGutter($o-registry-header-breakpoint);
		}
	}

	// Give a minimum width to submenus
	[data-o-hierarchical-nav-level] {
		min-width: 100%;
		box-sizing: border-box;
	}
}

// Alternative to the FT masthead
.o-registry-header__title {
	display: inline-block;
	margin: 0;
	padding: 0;
	font-weight: normal;
	font-size: 20px;
	line-height: 40px;
	white-space: nowrap;
	vertical-align: top;

	@include _oRegistryHeaderBreakpoint {
		font-size: 24px;

		.o-registry-header--tall & {
			line-height: 60px;
		}
	}
}

// Primary container
.o-registry-header__primary {
	display: table;
	table-layout: fixed;
	width: 100%;
	height: 50px;
}

// Inner containers for the primary container
.o-registry-header__primary__left,
.o-registry-header__primary__center,
.o-registry-header__primary__right {
	display: table-cell;
	vertical-align: middle;
}

.o-registry-header__primary__left {
	@if type-of($o-registry-header-primary-left-width) == map {
		@each $layout-name, $header-primary-left-width in $o-registry-header-primary-left-width {
			@if $layout-name == default {
				width: $header-primary-left-width;
			} @else {
				@include oGridRespondTo($layout-name) {
					width: $header-primary-left-width;
				}
			}
			@if $layout-name == $o-grid-fixed-layout {
				@include oGridTargetIE8 {
					width: $header-primary-left-width;
				}
			}
		}
	}
	@if type-of($o-registry-header-primary-left-width) == number {
		width: $o-registry-header-primary-left-width;
	}
}

.o-registry-header__primary__right {
	position: relative;
	right: oGridGutter() * -1;

	@include _oRegistryHeaderBreakpoint {
		right: 0;
	}
}

.o-registry-header__nav--primary-theme {
	@include oHierarchicalNavHorizontalTheme;
	text-align: right;
	// Used in core experience so hidden elements don't continue appearing
	overflow: hidden;

	[data-o-hierarchical-nav-level] {
		background-color: oColorsGetPaletteColor('grey-tint5');
	}

	li {
		text-align: left;

		&[aria-controls][aria-expanded="true"]:after {
			// CSS arrow for mega-dropdowns
			@include oRegistryHeaderUpArrow(oColorsGetPaletteColor('blue'));
			z-index: $_o-hierarchical-nav-mega-dropdown-zindex+1;
		}
	}

	a {
		padding-right: oGridGutter();
		padding-left: oGridGutter();
		font-size: 14px;
	}

	// scss-lint:disable SelectorDepth
	[data-o-hierarchical-nav-level='1'] > li {
		// Default styling for the a tag
		> a {
			text-transform: uppercase;
			font-weight: normal;
			line-height: 50px;
			height: 100%;
		}

		// Styling for the a tag in a selected state
		&[aria-selected="true"] > a,
		&[aria-controls][aria-expanded="true"] > a {
			color: oColorsGetPaletteColor('white');
			opacity: 0.7;
		}
	}
	// scss-lint:enable SelectorDepth

	// Padding for all a tags that aren't in the first hierarchical nav level
	[data-o-hierarchical-nav-level] [data-o-hierarchical-nav-level] a {
		padding: 14px oGridGutter();
	}
}

// Set extra top positioning so that the secondary container with the brand colour can be seen
.o-registry-header__mega-dropdown--primary.o-hierarchical-nav__mega-dropdown {
	top: 100%;
}
